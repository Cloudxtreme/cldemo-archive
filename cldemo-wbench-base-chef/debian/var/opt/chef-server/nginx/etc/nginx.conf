user chef_server chef_server;
worker_processes 2;
error_log /var/log/chef-server/nginx/error.log;

daemon off;

events {
  worker_connections 10240;
}

http {
  log_format opscode '$remote_addr - $remote_user [$time_local]  '
                    '"$request" $status "$request_time" $body_bytes_sent '
                    '"$http_referer" "$http_user_agent" "$upstream_addr" "$upstream_status" "$upstream_response_time" "$http_x_chef_version" "$http_x_ops_sign" "$http_x_ops_userid" "$http_x_ops_timestamp" "$http_x_ops_content_hash" $request_length';

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;

  keepalive_timeout 65;

  gzip on;
  gzip_http_version 1.0;
  gzip_comp_level 2;
  gzip_proxied any;
  gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript application/json;

  include /opt/chef-server/embedded/conf/mime.types;

  upstream erchef {
    server 127.0.0.1:8000;
  }
  upstream chef_server_webui {
    server 127.0.0.1:9462;
  }
  upstream bookshelf {
    server 127.0.0.1:4321;
  }

  # external lb config for Chef API
  proxy_cache_path  /var/opt/chef-server/nginx/cache levels=1:2 keys_zone=webui-cache:50m max_size=5000m inactive=600m;
  proxy_temp_path /var/opt/chef-server/nginx/cache-tmp;

  # We support three options: serve nothing on non_ssl_port (80),
  # redirect to https, or actually serve the API.

  server {
    # listen on ipv4 only
    listen 81;
    access_log /var/log/chef-server/nginx/rewrite-port-80.log;
    return 301 https://$host:443$request_uri;
  }

  # Chef HTTPS API
  include /var/opt/chef-server/nginx/etc/chef_https_lb.conf;
}
